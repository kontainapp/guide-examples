apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig


metadata:
  name: kdocscluster-eks
  region: us-east-1


nodeGroups:
  - name: kdocscluster-eks-unmanaged-ng
    instanceType: t2.medium
    # availabilityZones: ["us-east-1f"]
    minSize: 1
    maxSize: 1
    desiredCapacity: 1
    # privateNetworking: false
    # amiFamily: AmazonLinux2
    ami: ami-0022f774911c1d690
    volumeSize: 20
    containerRuntime: containerd
    labels: { role: kdocscluster-eks-worker }
    tags:
      nodegroup-role: kdocscluster-eks-worker
    ssh:
      allow: true
      publicKeyPath: ~/.ssh/id_rsa.pub


# managedNodeGroups:
#   - name: kdocscluster-eks-managed-ng
#     instanceType: t2.medium
#     ami: ami-0eeeef929db40543c
#     minSize: 1
#     maxSize: 1
#     desiredCapacity: 1
#     amiFamily: AmazonLinux2
#     volumeSize: 20
#     ssh:
#       allow: true
#       publicKeyPath: ~/.ssh/id_rsa.pub
#       # new feature for restricting SSH access to certain AWS security group IDs
#       # sourceSecurityGroupIds: ["sg-00241fbb12c607007"]
#     labels: {role: kdocscluster-eks-worker}
#     tags:
#       nodegroup-role: kdocscluster-eks-worker
#     # launchTemplate:
#     #   id: lt-12345
#     # below provided as dockershim (default for managed) is now deprecated
#     # HAS to be used with an amazon optimized EKS image that contains below file
#     overrideBootstrapCommand: |
#       #!/bin/bash
#       /etc/eks/bootstrap.sh kdocscluster-eks --container-runtime containerd